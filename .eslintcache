[{"L:\\React\\api-training-portfolio\\src\\index.js":"1","L:\\React\\api-training-portfolio\\src\\App.js":"2","L:\\React\\api-training-portfolio\\src\\reportWebVitals.js":"3","L:\\React\\api-training-portfolio\\src\\reducers\\index.js":"4","L:\\React\\api-training-portfolio\\src\\reducers\\MoviesReducer.js":"5","L:\\React\\api-training-portfolio\\src\\actions\\movieAction.js":"6","L:\\React\\api-training-portfolio\\src\\Api\\api.js":"7","L:\\React\\api-training-portfolio\\src\\components\\Navigation\\navStyle.js":"8","L:\\React\\api-training-portfolio\\src\\actions\\detailsActions.js":"9","L:\\React\\api-training-portfolio\\src\\reducers\\detailReducer.js":"10","L:\\React\\api-training-portfolio\\src\\pages\\Categories.js":"11","L:\\React\\api-training-portfolio\\src\\reducers\\SeriesReducer.js":"12","L:\\React\\api-training-portfolio\\src\\actions\\seriesAction.js":"13","L:\\React\\api-training-portfolio\\src\\reducers\\detailTvReducer.js":"14","L:\\React\\api-training-portfolio\\src\\actions\\detailsTvActions.js":"15","L:\\React\\api-training-portfolio\\src\\pages\\PopularTvSeries.js":"16","L:\\React\\api-training-portfolio\\src\\pages\\PopularMovies.js":"17","L:\\React\\api-training-portfolio\\src\\assets\\Global Styles\\GlobalStyle.js":"18","L:\\React\\api-training-portfolio\\src\\components\\Movie\\Movie.js":"19","L:\\React\\api-training-portfolio\\src\\components\\Movie\\singleMovie.js":"20","L:\\React\\api-training-portfolio\\src\\components\\series\\Series.js":"21","L:\\React\\api-training-portfolio\\src\\components\\series\\singleSeries.js":"22","L:\\React\\api-training-portfolio\\src\\components\\Categories\\CategoriesMovie.js":"23","L:\\React\\api-training-portfolio\\src\\pages\\Search.js":"24","L:\\React\\api-training-portfolio\\src\\actions\\searchAction.js":"25","L:\\React\\api-training-portfolio\\src\\reducers\\searchReducer.js":"26","L:\\React\\api-training-portfolio\\src\\components\\Search\\SingleMovie.js":"27","L:\\React\\api-training-portfolio\\src\\components\\Search\\SearchStyles.js":"28","L:\\React\\api-training-portfolio\\src\\components\\Search\\SingleSeries.js":"29","L:\\React\\api-training-portfolio\\src\\components\\Search\\SingleActor.js":"30","L:\\React\\api-training-portfolio\\src\\pages\\Actors.js":"31","L:\\React\\api-training-portfolio\\src\\reducers\\actorsReducer.js":"32","L:\\React\\api-training-portfolio\\src\\actions\\actorsActions.js":"33","L:\\React\\api-training-portfolio\\src\\components\\Actors\\Actor.js":"34","L:\\React\\api-training-portfolio\\src\\reducers\\ActorsDetailsReducer.js":"35","L:\\React\\api-training-portfolio\\src\\actions\\actorsDetailsAction.js":"36","L:\\React\\api-training-portfolio\\src\\components\\Actors\\SingleActor.js":"37","L:\\React\\api-training-portfolio\\src\\Hooks\\mobileHook.js":"38","L:\\React\\api-training-portfolio\\src\\components\\Navigation\\MobileNavigation.js":"39","L:\\React\\api-training-portfolio\\src\\components\\Navigation\\DesktopNavigation.js":"40","L:\\React\\api-training-portfolio\\src\\components\\Navigation\\BurgerMenu.js":"41","L:\\React\\api-training-portfolio\\src\\components\\Navigation\\MobileNavigationStyles.js":"42"},{"size":1032,"mtime":1611756128528,"results":"43","hashOfConfig":"44"},{"size":2027,"mtime":1612478240927,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":730,"mtime":1612440320591,"results":"47","hashOfConfig":"44"},{"size":670,"mtime":1612382687443,"results":"48","hashOfConfig":"44"},{"size":743,"mtime":1612382694432,"results":"49","hashOfConfig":"44"},{"size":4477,"mtime":1612382415674,"results":"50","hashOfConfig":"44"},{"size":979,"mtime":1612524526557,"results":"51","hashOfConfig":"44"},{"size":739,"mtime":1612382726505,"results":"52","hashOfConfig":"44"},{"size":760,"mtime":1612382910234,"results":"53","hashOfConfig":"44"},{"size":1534,"mtime":1612441813643,"results":"54","hashOfConfig":"44"},{"size":378,"mtime":1611741947140,"results":"55","hashOfConfig":"44"},{"size":340,"mtime":1612362641559,"results":"56","hashOfConfig":"44"},{"size":800,"mtime":1612384170983,"results":"57","hashOfConfig":"44"},{"size":749,"mtime":1612384132115,"results":"58","hashOfConfig":"44"},{"size":2589,"mtime":1612440934709,"results":"59","hashOfConfig":"44"},{"size":2731,"mtime":1612441701140,"results":"60","hashOfConfig":"44"},{"size":512,"mtime":1612366996538,"results":"61","hashOfConfig":"44"},{"size":1188,"mtime":1612524471794,"results":"62","hashOfConfig":"44"},{"size":7780,"mtime":1612524365812,"results":"63","hashOfConfig":"44"},{"size":1080,"mtime":1612524569889,"results":"64","hashOfConfig":"44"},{"size":8994,"mtime":1612454427415,"results":"65","hashOfConfig":"44"},{"size":1344,"mtime":1612366259447,"results":"66","hashOfConfig":"44"},{"size":5150,"mtime":1612442455837,"results":"67","hashOfConfig":"44"},{"size":693,"mtime":1611937930921,"results":"68","hashOfConfig":"44"},{"size":702,"mtime":1612293888884,"results":"69","hashOfConfig":"44"},{"size":859,"mtime":1612454171725,"results":"70","hashOfConfig":"44"},{"size":443,"mtime":1611941651216,"results":"71","hashOfConfig":"44"},{"size":831,"mtime":1612454174716,"results":"72","hashOfConfig":"44"},{"size":855,"mtime":1612454084149,"results":"73","hashOfConfig":"44"},{"size":1282,"mtime":1612294289441,"results":"74","hashOfConfig":"44"},{"size":554,"mtime":1612293829121,"results":"75","hashOfConfig":"44"},{"size":374,"mtime":1612290515475,"results":"76","hashOfConfig":"44"},{"size":1254,"mtime":1612524619656,"results":"77","hashOfConfig":"44"},{"size":611,"mtime":1612450189744,"results":"78","hashOfConfig":"44"},{"size":451,"mtime":1612384139441,"results":"79","hashOfConfig":"44"},{"size":4118,"mtime":1612455238072,"results":"80","hashOfConfig":"44"},{"size":448,"mtime":1612470974487,"results":"81","hashOfConfig":"44"},{"size":1668,"mtime":1612800656293,"results":"82","hashOfConfig":"44"},{"size":996,"mtime":1612478276959,"results":"83","hashOfConfig":"44"},{"size":1409,"mtime":1612524312986,"results":"84","hashOfConfig":"44"},{"size":487,"mtime":1612525223454,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"gjv8fd",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"L:\\React\\api-training-portfolio\\src\\index.js",[],["176","177"],"L:\\React\\api-training-portfolio\\src\\App.js",[],"L:\\React\\api-training-portfolio\\src\\reportWebVitals.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\index.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\MoviesReducer.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\movieAction.js",[],"L:\\React\\api-training-portfolio\\src\\Api\\api.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Navigation\\navStyle.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\detailsActions.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\detailReducer.js",[],"L:\\React\\api-training-portfolio\\src\\pages\\Categories.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\SeriesReducer.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\seriesAction.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\detailTvReducer.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\detailsTvActions.js",[],"L:\\React\\api-training-portfolio\\src\\pages\\PopularTvSeries.js",["178","179"],"import React, { useEffect, useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {loadSeries} from '../actions/seriesAction'\r\nimport styled from 'styled-components'\r\nimport Series from '../components/series/Series'\r\nconst PopularTvSeries = ({pageNumber, setPageNumber}) =>{\r\n\r\n    const nextPageHandler = () =>{\r\n        window.scrollTo(0, 0);\r\n        if(pageNumber === 10){\r\n            setPageNumber(1)\r\n        }\r\n        else{\r\n            setPageNumber(pageNumber + 1);\r\n        }\r\n    }\r\n    const previousPageHandler = ( )=>{\r\n        window.scrollTo(0, 0);\r\n        if(pageNumber === 1){\r\n            setPageNumber(10)\r\n        }\r\n        else{\r\n            setPageNumber(pageNumber - 1);\r\n        }\r\n\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(loadSeries(pageNumber))\r\n    }, [pageNumber])\r\n\r\n    const {popularSeries} = useSelector((state)=>state.series)\r\n    return(\r\n        <HomePage>\r\n            <h2>Popular TV SERIES</h2>\r\n            <h3>Page: {pageNumber}</h3>\r\n            {popularSeries && (\r\n\r\n                <SeriesList>\r\n                    {\r\n                        popularSeries.map((series)=><Series \r\n                            title={series.original_name}\r\n                            image={series.poster_path}\r\n                            key={series.id}\r\n                            id={series.id}\r\n                        />)\r\n                    }\r\n                </SeriesList>\r\n            )}\r\n                        <Pages>\r\n                <PreviousPage onClick={previousPageHandler}>Previus page</PreviousPage>\r\n                <NextPage onClick={nextPageHandler}>Next page</NextPage>\r\n            </Pages>\r\n        </HomePage>\r\n    )\r\n}\r\n\r\nconst HomePage = styled.div`\r\nwidth: 100%;\r\nheight: auto;\r\nh3{\r\n    text-align: center;\r\n    color: #47CCA0;\r\n    padding-top: 1rem;\r\n    font-size: 1.5rem;\r\n}\r\nh2{\r\n    text-align: center;\r\n    color: #47CCA0;\r\n    padding-top: 1rem;\r\n    font-size: 2rem;\r\n\r\n}`\r\n\r\nconst SeriesList = styled.div`\r\ndisplay: grid;\r\nwidth: 80%;\r\nmargin: 0 auto;\r\nmargin-top: 5rem;\r\ngrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\ngrid-column-gap: 1rem;\r\ngrid-row-gap: 3rem;\r\n`\r\nconst Pages = styled.div`\r\ntext-align: center;\r\nmargin-top: 1rem;\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\nconst PreviousPage = styled.div`\r\ncolor: #47CCA0;\r\npadding: 0rem 1rem;\r\nfont-size: 2rem;\r\ncursor: pointer;\r\n`\r\nconst NextPage = styled.div`\r\ncolor: #47CCA0;\r\npadding: 0rem 1rem;\r\nfont-size: 2rem;\r\ncursor: pointer;\r\n`\r\nexport default PopularTvSeries","L:\\React\\api-training-portfolio\\src\\pages\\PopularMovies.js",["180","181"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loadMovies} from '../actions/movieAction'\r\nimport Movies from '../components/Movie/Movie'\r\nimport styled from 'styled-components'\r\nimport {motion} from 'framer-motion'\r\n\r\n\r\nconst PopularMovies = ({pageNumber, setPageNumber}) =>{\r\n\r\n    const nextPageHandler = () =>{\r\n\r\n        window.scrollTo(0, 0);\r\n        if(pageNumber === 10){\r\n            setPageNumber(1)\r\n        }\r\n        else{\r\n            setPageNumber(pageNumber + 1);\r\n        }\r\n    }\r\n    const previousPageHandler = ( )=>{\r\n        window.scrollTo(0, 0);\r\n        if(pageNumber === 1){\r\n            setPageNumber(10)\r\n        }\r\n        else{\r\n            setPageNumber(pageNumber - 1);\r\n        }\r\n\r\n    }\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n      dispatch(loadMovies(pageNumber));\r\n    }, [pageNumber])\r\n    \r\n    const {popularMovies} = useSelector((state) => state.movies)\r\n    return(\r\n        <HomePage>\r\n\r\n            <h2>Popular Movies</h2>\r\n            <h3>Page: {pageNumber}</h3>\r\n            {popularMovies &&(\r\n   \r\n            <MoviesList>\r\n                {\r\n                popularMovies.map((movie) =><Movies key={movie.id}\r\n                    title={movie.original_title}\r\n                    release={movie.release_date}\r\n                    image={movie.poster_path}\r\n                    overview={movie.overview}\r\n                    id={movie.id}\r\n                    rating={movie.vote_average}/>\r\n\r\n                )}\r\n                </MoviesList>\r\n                                )}\r\n\r\n            <Pages>\r\n                <PreviousPage onClick={previousPageHandler}>Previus page</PreviousPage>\r\n                <NextPage onClick={nextPageHandler}>Next page</NextPage>\r\n            </Pages>\r\n        </HomePage>\r\n    )\r\n}\r\n\r\nconst HomePage = styled(motion.div)`\r\nwidth: 100%;\r\nmin-height: 100vh;\r\nh2{\r\n    text-align: center;\r\n    color: #47CCA0;\r\n    padding-top: 1rem;\r\n    font-size: 2rem;\r\n\r\n}\r\nh3{\r\n    text-align: center;\r\n    color: #47CCA0;\r\n    padding-top: 1rem;\r\n    font-size: 1.5rem;\r\n}\r\n`\r\nconst MoviesList = styled(motion.div)`\r\ndisplay: grid;\r\nwidth: 80%;\r\nmargin: 0 auto;\r\nmargin-top: 5rem;\r\ngrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\ngrid-column-gap: 1rem;\r\ngrid-row-gap: 3rem;\r\njustify-content: end;\r\n`\r\n\r\nconst Pages = styled.div`\r\ntext-align: center;\r\nmargin-top: 1rem;\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\nconst PreviousPage = styled.div`\r\ncolor: #47CCA0;\r\npadding: 0rem 1rem;\r\nfont-size: 2rem;\r\ncursor: pointer;\r\n`\r\nconst NextPage = styled.div`\r\ncolor: #47CCA0;\r\npadding: 0rem 1rem;\r\nfont-size: 2rem;\r\ncursor: pointer;\r\n`\r\nexport default PopularMovies","L:\\React\\api-training-portfolio\\src\\assets\\Global Styles\\GlobalStyle.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Movie\\Movie.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Movie\\singleMovie.js",[],"L:\\React\\api-training-portfolio\\src\\components\\series\\Series.js",[],"L:\\React\\api-training-portfolio\\src\\components\\series\\singleSeries.js",["182"],"import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport anonymo from '../../assets/images/anonymous.png'\r\nimport Series from './Series'\r\nimport Actor from '../Actors/Actor'\r\n\r\nconst SingleSeries = ()=>{\r\n\r\n\r\n    const {series, isLoading, video, credits, similar} = useSelector((state)=> state.seriesDetail)\r\n\r\n    const finalImage = `https://image.tmdb.org/t/p/w1280/${series.backdrop_path}`;\r\n    const SeriesInfo = styled.div`\r\n    width: 100%;\r\n    height: 90vh;\r\n    background: url(${finalImage});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    -webkit-box-shadow: inset 0px -200px 800px -19px rgba(0,0,0,1);\r\n    -moz-box-shadow: inset 0px -300px 80px -19px rgba(0,0,0,1);\r\n    box-shadow: inset 0px -300px 80px -19px rgba(0,0,0,1);\r\n    display: flex;\r\n    align-items: flex-end;\r\n    color: white;\r\n    padding: 0rem 12rem;\r\n    font-family: 'Oswald', sans-serif;\r\n    @media (max-width: 900px){\r\n    padding: 0 0.5rem;\r\n    justify-content: center;\r\n    background-size: contain;\r\n    align-items: center;\r\n    -webkit-box-shadow: inset 0px -450px 100px -19px rgba(0,0,0,1);\r\n-moz-box-shadow: inset 0px -450px 100px -19px rgba(0,0,0,1);\r\nbox-shadow: inset 0px -450px 100px -19px rgba(0,0,0,1);\r\nheight: auto;\r\npadding-top: 15rem;\r\nmargin-bottom: 5rem;\r\n}\r\n    `\r\n\r\n    return(\r\n        <>\r\n        {!isLoading &&(\r\n                <SeriesDetail>\r\n                    <SeriesInfo>\r\n                        <SeriesPoster>\r\n                        <img src={`https://image.tmdb.org/t/p/w500${series.poster_path}`} alt={series.poster_path}/>\r\n                        </SeriesPoster>\r\n                        <SeriesOverview>\r\n                            <SeriesTitle>\r\n                                <h2>{series.original_name}</h2>\r\n                            </SeriesTitle>\r\n                            <SeriesRating>\r\n                                <p>Series Rating: {series.vote_average}</p>\r\n                            </SeriesRating>\r\n                            <SeriesDescription>\r\n                                <p>{series.overview}</p>\r\n                            </SeriesDescription>\r\n                            <SeriesReleaseDate>\r\n                                <p>Release date: {series.first_air_date}</p>\r\n                            </SeriesReleaseDate>\r\n                            <SeriesGenres>\r\n                                {series.genres.map((genres)=><p key={genres.id}>{genres.name}</p>)}\r\n                            </SeriesGenres>\r\n                        </SeriesOverview>\r\n                    </SeriesInfo>\r\n                    <SeasonsAndNetworks>\r\n                    <Seasons>\r\n                        <h3>Seasons:</h3>\r\n        {series.seasons.map((season)=><div><p>{season.name}: </p> <p>{season.episode_count} Episodes</p></div>)}\r\n                    </Seasons>\r\n                    <Networks>\r\n                        <h3>Available on:</h3>\r\n                        {series.networks.map((network)=><div><p key={network.id}>{network.name}</p></div>)}\r\n                    </Networks>\r\n                    </SeasonsAndNetworks>\r\n                    <SeriesTrailer>\r\n                <div>\r\n                <h3>ZOBACZ ZWIASTUN</h3>\r\n\r\n                </div>\r\n                {video &&(\r\n                    <iframe src={`https://www.youtube.com/embed/${video[0].key}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" title={video[0].key}></iframe>\r\n                )}\r\n                </SeriesTrailer>\r\n                <ActorsList>\r\n                    <h3>OBSADA</h3>\r\n                    <ActorsBox>\r\n                        {\r\n                        credits.map((actor)=>(<Actor\r\n                                    id={actor.id}\r\n                                    key={actor.id}\r\n                                    name={actor.name}\r\n                                    image={actor.profile_path}\r\n                                />\r\n                    \r\n\r\n\r\n                        ))\r\n                    }\r\n                \r\n                    </ActorsBox>\r\n                    </ActorsList>\r\n                    <SimilarSeries>\r\n                        <h2>Similar Series:</h2>\r\n                        <SeriesList>\r\n                            {\r\n                                similar.map((series)=><Series\r\n                                title={series.original_name}\r\n                                image={series.poster_path}\r\n                                key={series.id}\r\n                                id={series.id}\r\n                                />)\r\n                            }\r\n                        </SeriesList>\r\n                    </SimilarSeries>\r\n                </SeriesDetail>\r\n\r\n        )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst SeriesDetail = styled.div`\r\nwidth: 100%;\r\nmin-height: 300vh;\r\nbackground: black;\r\n\r\n`\r\n\r\nconst SeriesPoster = styled.div`\r\nheight: 300px;\r\nflex: 1;\r\nimg{\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n}\r\n@media (max-width: 900px){\r\n    height: 300px;\r\n    img{\r\n        padding: 0rem 1rem;\r\n        width: 200px;\r\n        height: 250px;\r\n        object-fit: cover;\r\n    }\r\n}\r\n`\r\nconst SeriesOverview = styled.div`\r\ndisplay: flex;\r\nflex: 1;\r\nheight: 300px;\r\nflex-direction: column;\r\njustify-content: space-around;\r\npadding-left: 1rem;\r\n@media (max-width: 900px){\r\n padding-left: 0rem;  \r\n justify-content: flex-start;\r\n height: 300px;\r\n}\r\n`\r\nconst SeriesTitle = styled.div`\r\nfont-size: 1.5rem;\r\n@media (max-width: 900px){\r\n   font-size: 1rem;\r\n   text-align: center;\r\n}\r\n`\r\nconst SeriesRating = styled.div`\r\n\r\n`\r\nconst SeriesDescription = styled.div`\r\nfont-size: 0.8rem;\r\nfont-weight: lighter;\r\n@media (max-width: 900px){\r\n padding: 0.5rem 0rem;  \r\n}\r\n`\r\nconst SeriesReleaseDate = styled.div`\r\nfont-size: 0.8rem;\r\nfont-size: bold;\r\n@media (max-width: 900px){\r\n padding-bottom: 0.5rem;  \r\n}\r\n`\r\nconst SeriesGenres = styled.div`\r\n\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: flex-start;\r\np{\r\n    background-color: #47CCA0;\r\n    padding:0rem 0.5rem;\r\n    font-size: 0.7rem;\r\n    border-radius: 1rem;\r\n    margin-right: 0.5rem;\r\n\r\n}\r\n@media (max-width: 900px){\r\n justify-content: center;  \r\n}\r\n`\r\nconst SeasonsAndNetworks = styled.div`\r\nwidth: 70%;\r\nmargin: 0 auto;\r\ndisplay: flex;\r\n@media (max-width: 900px){\r\n    width: 100%;\r\n    padding: 0 1rem;\r\n    justify-content: space-between;\r\n}\r\n`\r\nconst Seasons = styled.div`\r\nwidth: 70%;\r\nmargin: 0 auto;\r\npadding: 0;\r\ncolor: white;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\npadding: 2rem 0rem;\r\nflex: 1;\r\nh3{\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n}\r\ndiv{\r\n    \r\n    display: flex;\r\n}\r\np{\r\n    margin: 0.25rem 0.25rem;\r\n}\r\np:first-child{\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n}\r\np:last-child{\r\n    font-size: 0.8rem;\r\n    line-height: 1.5rem;\r\n}\r\n@media (max-width: 900px){\r\n    width: 100%;\r\n    p:last-child{\r\n        font-size: 1rem;\r\n    }\r\n}\r\n`\r\nconst Networks = styled.div`\r\npadding: 2rem 0rem;\r\nflex: 2;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\np{\r\n    color: white;\r\n}\r\nimg{\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: contain;\r\n\r\n}\r\nh3{\r\n    color: white;\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n}\r\n@media (max-width: 900px){\r\n    flex: 1;\r\n}\r\n`\r\nconst SeriesTrailer = styled.div`\r\nwidth: 70%;\r\nmargin: 0 auto;\r\nheight: 300px;\r\ndiv{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\nh3{\r\n    width: 20rem;\r\n    color: #47CCA0;\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    display: inline-block;\r\n}\r\niframe{\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n    width: 50%;\r\n    display: block;\r\n    height: 100%;\r\n    border: 3px solid #47CCA0;\r\n}\r\n@media (max-width: 900px){\r\n    width: 100%;\r\n    div{\r\n        justify-content: center;\r\n    }\r\n    iframe{\r\n        width: 90%;\r\n        height: 80%;\r\n    }\r\n}\r\n`\r\n\r\nconst ActorsList = styled.div`\r\npadding-top: 10rem;\r\nwidth: 70%;\r\nmargin: 0 auto;\r\nh3{\r\n    min-width: 100%;\r\n    display: block;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    color: #47cca0;\r\n}\r\n`\r\nconst ActorsBox = styled.div`\r\ndisplay: grid;\r\nwidth: 100%;\r\nmargin-top: 2rem;\r\nheight: 80vh;\r\noverflow-y: scroll;\r\ngrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\ngrid-column-gap: 1rem;\r\ngrid-row-gap: 3rem;\r\n\r\n::-webkit-scrollbar {\r\n  width: 0.5rem;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #fff;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #47cca0;\r\n}\r\n`\r\n\r\n\r\nconst SimilarSeries = styled.div`\r\nwidth: 80%;\r\nmargin: 0 auto;\r\npadding-bottom: 2rem;\r\nh2{\r\n    color:  #47cca0;\r\n    padding-top: 4rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n}\r\n`\r\nconst SeriesList = styled.div`\r\ndisplay: grid;\r\nwidth: 80%;\r\nmargin: 0 auto;\r\nmargin-top: 2rem;\r\ngrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\ngrid-column-gap: 1rem;\r\ngrid-row-gap: 3rem;\r\njustify-content: end;\r\n`\r\nexport default SingleSeries","L:\\React\\api-training-portfolio\\src\\components\\Categories\\CategoriesMovie.js",["183"],"import React,{useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loadMovies} from '../../actions/movieAction'\r\nimport {useParams} from 'react-router-dom'\r\nimport Movies from '../../components/Movie/Movie'\r\nimport styled from 'styled-components'\r\nimport {motion} from 'framer-motion'\r\nconst CategoriesMovie = ()=>{\r\n  const {id, genreName} = useParams()\r\n\r\n\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(()=>{\r\n    dispatch(loadMovies(id));\r\n  },[dispatch])\r\n  const {movieGenresList} = useSelector((state) => state.movies)\r\n    return(\r\n      <HomePage>\r\n\r\n    <h2>Top 20 filmów z kategorii {genreName}</h2>\r\n      {movieGenresList&&(\r\n\r\n      <MoviesList>\r\n          {movieGenresList.map((movie) =><Movies title={movie.original_title} image={movie.poster_path} key={movie.id} id={movie.id}/>)}\r\n          </MoviesList>\r\n                          )}\r\n  </HomePage>\r\n\r\n\r\n    )\r\n}\r\nconst HomePage = styled(motion.div)`\r\nwidth: 100%;\r\nheight: auto;\r\nh2{\r\n    text-align: center;\r\n    color: #47CCA0;\r\n    padding-top: 1rem;\r\n    font-size: 2rem;\r\n\r\n}\r\n`\r\nconst MoviesList = styled(motion.div)`\r\ndisplay: grid;\r\nwidth: 80%;\r\nmargin: 0 auto;\r\nmargin-top: 5rem;\r\ngrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\ngrid-column-gap: 1rem;\r\ngrid-row-gap: 3rem;\r\n`\r\n\r\nexport default CategoriesMovie","L:\\React\\api-training-portfolio\\src\\pages\\Search.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\searchAction.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\searchReducer.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Search\\SingleMovie.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Search\\SearchStyles.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Search\\SingleSeries.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Search\\SingleActor.js",[],"L:\\React\\api-training-portfolio\\src\\pages\\Actors.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\actorsReducer.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\actorsActions.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Actors\\Actor.js",[],"L:\\React\\api-training-portfolio\\src\\reducers\\ActorsDetailsReducer.js",[],"L:\\React\\api-training-portfolio\\src\\actions\\actorsDetailsAction.js",["184"],"import axios from 'axios'\r\nimport {actorDetailApi, actorMoviesApi, similarTvSeriesApi} from '../Api/api'\r\n\r\n\r\nexport const loadActorDetail = (id) => async (dispatch) =>{\r\n    const actorData = await axios.get(actorDetailApi(id))\r\n    const videoData = await axios.get(actorMoviesApi(id))\r\n    dispatch({\r\n        type: \"FETCH_ACTOR\",\r\n        payload: {\r\n            actor: actorData.data,\r\n            video: videoData.data,\r\n        }\r\n    })\r\n\r\n}\r\n","L:\\React\\api-training-portfolio\\src\\components\\Actors\\SingleActor.js",[],"L:\\React\\api-training-portfolio\\src\\Hooks\\mobileHook.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Navigation\\MobileNavigation.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Navigation\\DesktopNavigation.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Navigation\\BurgerMenu.js",[],"L:\\React\\api-training-portfolio\\src\\components\\Navigation\\MobileNavigationStyles.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":28,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":31,"column":8,"nodeType":"195","endLine":31,"endColumn":20,"suggestions":"196"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":35},{"ruleId":"193","severity":1,"message":"194","line":34,"column":8,"nodeType":"195","endLine":34,"endColumn":20,"suggestions":"197"},{"ruleId":"189","severity":1,"message":"198","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":15},{"ruleId":"193","severity":1,"message":"199","line":18,"column":5,"nodeType":"195","endLine":18,"endColumn":15,"suggestions":"200"},{"ruleId":"189","severity":1,"message":"201","line":2,"column":41,"nodeType":"191","messageId":"192","endLine":2,"endColumn":59},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["204"],["205"],"'anonymo' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["206"],"'similarTvSeriesApi' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [dispatch, pageNumber]",{"range":"212","text":"213"},{"range":"214","text":"213"},"Update the dependencies array to be: [dispatch, id]",{"range":"215","text":"216"},[858,870],"[dispatch, pageNumber]",[894,906],[489,499],"[dispatch, id]"]